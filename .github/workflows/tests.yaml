---
name: Testing

# yamllint disable-line rule:truthy
on:
  pull_request:
    types: [opened, reopened, synchronize]
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  pytest:
    name: Python ${{ matrix.python }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: [ubuntu]
        python: ['3.12', '3.13']

    steps:
      - name: Check out code from GitHub
        uses: actions/checkout@v4

      - name: 🏗 Set up Poetry
        run: pipx install poetry

      - name: Set up Python ${{ matrix.python }}
        id: python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
          cache: "poetry"

      - name: Install workflow dependencies
        run: |
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true

      - name: Install dependencies
        run: poetry install --no-interaction

      - name: Run pytest
        run: poetry run pytest --cov homewizard_energy tests

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python }}-${{ matrix.os }}
          include-hidden-files: true
          path: .coverage

  coverage:
    runs-on: ubuntu-latest
    needs: pytest
    steps:
      - name: Check out code from GitHub
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download coverage data
        uses: actions/download-artifact@v4

      - name: 🏗 Set up Poetry
        run: pipx install poetry

      - name: Set up Python 3.13
        id: python
        uses: actions/setup-python@v5
        with:
          python-version: 3.13
          cache: "poetry"

      - name: Install workflow dependencies
        run: |
          pip install -r .github/workflows/requirements.txt
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true

      - name: Restore cached Python virtual environment
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: >-
            venv-${{ runner.os }}-v1-${{ steps.python.outputs.python-version }}-${{ hashFiles('poetry.lock') }}
            venv-${{ runner.os }}-v1-${{ steps.python.outputs.python-version }}-

      - name: Install dependencies
        run: poetry install --no-interaction

      - name: Process coverage results
        run: |
          poetry run coverage combine coverage*/.coverage*
          poetry run coverage xml -i

      - name: Upload coverage report
        uses: codecov/codecov-action@v5.4.3
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
